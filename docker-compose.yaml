version: '3.8'

services:
  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443" 
    volumes:
      - /etc/letsencrypt/live/app.qcerris.cloud/cert.pem:/etc/letsencrypt/live/app.qcerris.cloud/cert.pem:ro
      - /etc/letsencrypt/live/app.qcerris.cloud/privkey.pem:/etc/letsencrypt/live/app.qcerris.cloud/privkey.pem:ro
      - /etc/letsencrypt/live/loki.qcerris.cloud/cert.pem:/etc/letsencrypt/live/loki.qcerris.cloud/cert.pem:ro
      - /etc/letsencrypt/live/loki.qcerris.cloud/privkey.pem:/etc/letsencrypt/live/loki.qcerris.cloud/privkey.pem:ro
      - /etc/letsencrypt/live/grafana.qcerris.cloud/cert.pem:/etc/letsencrypt/live/grafana.qcerris.cloud/cert.pem:ro
      - /etc/letsencrypt/live/grafana.qcerris.cloud/privkey.pem:/etc/letsencrypt/live/grafana.qcerris.cloud/privkey.pem:ro
      - /etc/letsencrypt/live/prometheus.qcerris.cloud/cert.pem:/etc/letsencrypt/live/prometheus.qcerris.cloud/cert.pem:ro
      - /etc/letsencrypt/live/prometheus.qcerris.cloud/privkey.pem:/etc/letsencrypt/live/prometheus.qcerris.cloud/privkey.pem:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - app_default

  prometheus:
    image: prom/prometheus
    restart: always
    volumes:
      - ./prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    networks:
      - app_default

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - '^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)'
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global
    networks:
      - app_default

  alertmanager:
    image: prom/alertmanager
    restart: always
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    networks:
      - app_default

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8081:8080
    restart: always
    deploy:
      mode: global
    networks:
      - app_default

  grafana:
    image: grafana/grafana
    user: '472'
    restart: always
    environment:
      GF_INSTALL_PLUGINS: 'grafana-clock-panel,grafana-simple-json-datasource'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    ports:
      - 3001:3000
    depends_on:
      - prometheus
    networks:
      - app_default

  loki:
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    volumes:
      - ./local-config.yaml:/etc/loki/local-config.yaml
      - ./loki:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - app_default

networks:
  app_default:
    external: true

volumes:
  prometheus_data: {}
  grafana_data: {}
