events {
    # Event processing configuration (optional)
}

http {
    # HTTP server configuration

    server {
        # Define server configuration

        listen 80;
        server_name app.qcerris.cloud;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    # HTTPS server configurations
    server {
        listen 443 ssl;
        server_name app.qcerris.cloud;

        ssl_certificate /etc/letsencrypt/live/app.qcerris.cloud/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/app.qcerris.cloud/privkey.pem;  # Corrected line

        location / {
            proxy_pass http://app-nextjs-1:3000;  # Forward requests to frontend service
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            client_max_body_size 0;
            proxy_read_timeout 36000s;
            proxy_redirect off;
        }
    }


    server {
        listen 80;
        server_name grafana.qcerris.cloud;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name grafana.qcerris.cloud;

        ssl_certificate /etc/letsencrypt/live/grafana.qcerris.cloud/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/grafana.qcerris.cloud/privkey.pem;

        location / {
            proxy_pass http://scripts-grafana-1:3000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            client_max_body_size 0;
            proxy_read_timeout 36000s;
            proxy_redirect off;
        }
    }

    server {
        listen 80;
        server_name prometheus.qcerris.cloud;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name prometheus.qcerris.cloud;

        ssl_certificate /etc/letsencrypt/live/prometheus.qcerris.cloud/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/prometheus.qcerris.cloud/privkey.pem;

        location / {
            proxy_pass http://scripts-prometheus-1:9090;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            client_max_body_size 0;
            proxy_read_timeout 36000s;
            proxy_redirect off;
        }
    }

    server {
        listen 80;
        server_name loki.qcerris.cloud;

        # Redirect HTTP to HTTPS
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl;
        server_name loki.qcerris.cloud;

        ssl_certificate /etc/letsencrypt/live/loki.qcerris.cloud/cert.pem;
        ssl_certificate_key /etc/letsencrypt/live/loki.qcerris.cloud/privkey.pem;

        location / {
            proxy_pass http://scripts-loki-1:3100;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            client_max_body_size 0;
            proxy_read_timeout 36000s;
            proxy_redirect off;
        }
    }
}
